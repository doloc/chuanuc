package com.hkl.chuanuc.entity;
// Generated Aug 25, 2019 6:12:29 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "shopify", uniqueConstraints = @UniqueConstraint(columnNames = "party_ship_code"))
public class Order implements java.io.Serializable {

	private OrderId id;
	private PaymentMethod paymentMethod;
	private Shipping shipping;
	private User userByCreator;
	private User userByCustomerId;
	private byte rankId;
	private byte city;
	private short privincal;
	private short ward;
	private String address;
	private String phone;
	private int shippingFee;
	private int subFee;
	private String partyShipCode;
	private int creatorId;
	private int profit;
	private byte status;
	private byte type;
	private int totalPrice;
	private byte paymentStatus;
	private int paidAmount;
	private Date created;
	private Date updated;
	private Set<OrderLog> orderLogs = new HashSet<OrderLog>(0);
	private Set<DebtLog> debtLogs = new HashSet<DebtLog>(0);
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);

	public Order() {
	}

	public Order(OrderId id, PaymentMethod paymentMethod, Shipping shipping, User userByCreator, User userByCustomerId,
			byte rankId, byte city, short privincal, short ward, String address, String phone, int shippingFee,
			int subFee, String partyShipCode, int creatorId, int profit, byte status, byte type, int totalPrice,
			byte paymentStatus, int paidAmount, Date created, Date updated) {
		this.id = id;
		this.paymentMethod = paymentMethod;
		this.shipping = shipping;
		this.userByCreator = userByCreator;
		this.userByCustomerId = userByCustomerId;
		this.rankId = rankId;
		this.city = city;
		this.privincal = privincal;
		this.ward = ward;
		this.address = address;
		this.phone = phone;
		this.shippingFee = shippingFee;
		this.subFee = subFee;
		this.partyShipCode = partyShipCode;
		this.creatorId = creatorId;
		this.profit = profit;
		this.status = status;
		this.type = type;
		this.totalPrice = totalPrice;
		this.paymentStatus = paymentStatus;
		this.paidAmount = paidAmount;
		this.created = created;
		this.updated = updated;
	}

	public Order(OrderId id, PaymentMethod paymentMethod, Shipping shipping, User userByCreator, User userByCustomerId,
			byte rankId, byte city, short privincal, short ward, String address, String phone, int shippingFee,
			int subFee, String partyShipCode, int creatorId, int profit, byte status, byte type, int totalPrice,
			byte paymentStatus, int paidAmount, Date created, Date updated, Set<OrderLog> orderLogs,
			Set<DebtLog> debtLogs, Set<OrderDetail> orderDetails) {
		this.id = id;
		this.paymentMethod = paymentMethod;
		this.shipping = shipping;
		this.userByCreator = userByCreator;
		this.userByCustomerId = userByCustomerId;
		this.rankId = rankId;
		this.city = city;
		this.privincal = privincal;
		this.ward = ward;
		this.address = address;
		this.phone = phone;
		this.shippingFee = shippingFee;
		this.subFee = subFee;
		this.partyShipCode = partyShipCode;
		this.creatorId = creatorId;
		this.profit = profit;
		this.status = status;
		this.type = type;
		this.totalPrice = totalPrice;
		this.paymentStatus = paymentStatus;
		this.paidAmount = paidAmount;
		this.created = created;
		this.updated = updated;
		this.orderLogs = orderLogs;
		this.debtLogs = debtLogs;
		this.orderDetails = orderDetails;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "id", column = @Column(name = "id", nullable = false)),
			@AttributeOverride(name = "shippingId", column = @Column(name = "shipping_id", nullable = false)),
			@AttributeOverride(name = "paymentMethodId", column = @Column(name = "payment_method_id", nullable = false)),
			@AttributeOverride(name = "customerId", column = @Column(name = "customer_id", nullable = false)),
			@AttributeOverride(name = "creator", column = @Column(name = "creator", nullable = false)) })
	public OrderId getId() {
		return this.id;
	}

	public void setId(OrderId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payment_method_id", nullable = false, insertable = false, updatable = false)
	public PaymentMethod getPaymentMethod() {
		return this.paymentMethod;
	}

	public void setPaymentMethod(PaymentMethod paymentMethod) {
		this.paymentMethod = paymentMethod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shipping_id", nullable = false, insertable = false, updatable = false)
	public Shipping getShipping() {
		return this.shipping;
	}

	public void setShipping(Shipping shipping) {
		this.shipping = shipping;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator", nullable = false, insertable = false, updatable = false)
	public User getUserByCreator() {
		return this.userByCreator;
	}

	public void setUserByCreator(User userByCreator) {
		this.userByCreator = userByCreator;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id", nullable = false, insertable = false, updatable = false)
	public User getUserByCustomerId() {
		return this.userByCustomerId;
	}

	public void setUserByCustomerId(User userByCustomerId) {
		this.userByCustomerId = userByCustomerId;
	}

	@Column(name = "rank_id", nullable = false)
	public byte getRankId() {
		return this.rankId;
	}

	public void setRankId(byte rankId) {
		this.rankId = rankId;
	}

	@Column(name = "city", nullable = false)
	public byte getCity() {
		return this.city;
	}

	public void setCity(byte city) {
		this.city = city;
	}

	@Column(name = "privincal", nullable = false)
	public short getPrivincal() {
		return this.privincal;
	}

	public void setPrivincal(short privincal) {
		this.privincal = privincal;
	}

	@Column(name = "ward", nullable = false)
	public short getWard() {
		return this.ward;
	}

	public void setWard(short ward) {
		this.ward = ward;
	}

	@Column(name = "address", nullable = false, length = 65535)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "phone", nullable = false, length = 65535)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "shipping_fee", nullable = false)
	public int getShippingFee() {
		return this.shippingFee;
	}

	public void setShippingFee(int shippingFee) {
		this.shippingFee = shippingFee;
	}

	@Column(name = "sub_fee", nullable = false)
	public int getSubFee() {
		return this.subFee;
	}

	public void setSubFee(int subFee) {
		this.subFee = subFee;
	}

	@Column(name = "party_ship_code", unique = true, nullable = false, length = 45)
	public String getPartyShipCode() {
		return this.partyShipCode;
	}

	public void setPartyShipCode(String partyShipCode) {
		this.partyShipCode = partyShipCode;
	}

	@Column(name = "creator_id", nullable = false)
	public int getCreatorId() {
		return this.creatorId;
	}

	public void setCreatorId(int creatorId) {
		this.creatorId = creatorId;
	}

	@Column(name = "profit", nullable = false)
	public int getProfit() {
		return this.profit;
	}

	public void setProfit(int profit) {
		this.profit = profit;
	}

	@Column(name = "status", nullable = false)
	public byte getStatus() {
		return this.status;
	}

	public void setStatus(byte status) {
		this.status = status;
	}

	@Column(name = "type", nullable = false)
	public byte getType() {
		return this.type;
	}

	public void setType(byte type) {
		this.type = type;
	}

	@Column(name = "total_price", nullable = false)
	public int getTotalPrice() {
		return this.totalPrice;
	}

	public void setTotalPrice(int totalPrice) {
		this.totalPrice = totalPrice;
	}

	@Column(name = "payment_status", nullable = false)
	public byte getPaymentStatus() {
		return this.paymentStatus;
	}

	public void setPaymentStatus(byte paymentStatus) {
		this.paymentStatus = paymentStatus;
	}

	@Column(name = "paid_amount", nullable = false)
	public int getPaidAmount() {
		return this.paidAmount;
	}

	public void setPaidAmount(int paidAmount) {
		this.paidAmount = paidAmount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<OrderLog> getOrderLogs() {
		return this.orderLogs;
	}

	public void setOrderLogs(Set<OrderLog> orderLogs) {
		this.orderLogs = orderLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<DebtLog> getDebtLogs() {
		return this.debtLogs;
	}

	public void setDebtLogs(Set<DebtLog> debtLogs) {
		this.debtLogs = debtLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

}
